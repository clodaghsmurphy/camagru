version: "3.8"

services:
  front:
    container_name: front_react
    image: docker-react_i
    volumes:
      - './app:/app'
      - '/app/node_modules'
    build:
      context: ${PWD}/app
      dockerfile: Dockerfile
    stdin_open: true
    ports:
      - 3001:3000
    environment:
      - CHOKIDAR_USEPOLLIN=true
      - WATCHPACK_POLLING=true
      - WDS_SOCKET_PORT=3001
    networks:
      - camagru

  # java:
  #   container_name: back_java
  #   image: docker-java_i
  #   build:
  #     context: ${PWD}/back
  #     dockerfile: Dockerfile
  #   env_file:
  #     - .env
  #     - ${PWD}/camagru_back/.env
  #   ports:
  #     - 5555:5555
  #   depends_on:
  #     db:
  #       condition: service_healthy
  #   networks:
  #     - camagru

  db:
    container_name: database
    image: postgres:15.2-alpine
    volumes:
      - pg-data:/pg-data
    env_file:
      - .env
    networks:
      - camagru
    ports:
    - 5434:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5

volumes:
  front-volume:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/camagru_react_app
  pg-data:

networks:
  camagru: